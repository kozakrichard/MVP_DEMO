{"version":3,"sources":["components/MusicComponents/PianoRoll.js","sources/night.mp4","sources/Nightingale.png","components/nav.js","components/navSide.js","components/Video.js","components/Menu/MenuRight.js","components/Home.js","App.js","index.js"],"names":["PianoRoll","props","useState","data","instrument","setState","useForm","register","handleSubmit","previousStepIndex","useRef","numOfCol","numOfCells","currentStepIndex","setCurrentStepIndex","notes","steps","localStorage","setItem","JSON","stringify","current","handleClear","setPlay","testblues","document","querySelectorAll","i","length","classList","toggle","clearColLabel","acceptMidi","a","randoms","col","row","y","Math","random","round","contains","concat","console","log","addColumnElement","index","piano_roll_container","querySelector","pattern","T","col_container","createElement","add","col_label","span","innerText","appendChild","j","col_cell","addEventListener","innerHTML","indexOf","filter","match","purple_col","remove","useEffect","forEach","e","play","playhead","left_dist","window","getComputedStyle","left","style","parseInt","row_label","di","scrollIntoView","initializePianoRoll","array","className","id","onSubmit","value","class","type","onClick","isPlaying","bpm","onStepPlay","stepNotes","volume","vol","pan","Nav","alt","src","logo","decrement10","decrement","increment","increment10","NavSide","inValue","setInValue","panValue","setPanValue","String","min","max","onChange","handleVol","target","abs","handlePan","Video","componentDidMount","playVideo","componentWillUnmount","pauseVideo","getVid","el","video","playing","pause","render","autoPlay","loop","muted","ref","Night","state","React","Component","MenuRight","menuCollapse","setMenuCollapse","showMessage","setShowMessage","showMessage2","setShowMessage2","collapsed","rtl","iconShape","icon","onMouseEnter","onMouseLeave","to","path","component","location","href","Home","BPM","setBPM","setVolume","setPan","setToggle","setSample","sendData","midi","parse","getItem","axios","post","then","response","setIsPlaying","tog","sendMitty","togg","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0e7d399c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Song, Track, Instrument } from 'reactronica';\r\nimport './PianoRoll.css';\r\nimport axios from 'axios';\r\nimport {useForm} from 'react-hook-form';\r\nimport * as Tone from 'tone';\r\nimport { Midi } from '@tonejs/midi';\r\n\r\n\r\nexport default function PianoRoll(props) {\r\n\r\n    const [data, setState] = useState({data: {instrument: \"monoSynth\"}});\r\n    const {register, handleSubmit} = useForm();\r\n\r\n    var previousStepIndex = useRef(1);\r\n    const numOfCol = useRef(0);\r\n    const numOfCells = useRef(0);\r\n    const [currentStepIndex, setCurrentStepIndex] = useState(-1);\r\n    const notes = ['C8' , 'B7' , 'A#7' , 'A7' , 'G#7' , 'G7' , 'F#7' , 'F7' , 'E7' , 'D#7' , 'D7' , 'C#7' , 'C7' , 'B6' , 'A#6' , 'A6' , 'G#6' , 'G6' , 'F#6' , 'F6' , 'E6' , 'D#6' , 'D6' , 'C#6' , 'C6' , 'B5' , 'A#5' , 'A5' , 'G#5' , 'G5' , 'F#5' , 'F5' , 'E5' , 'D#5' , 'D5' , 'C#5' , 'C5' , 'B4' , 'A#4' , 'A4' , 'G#4' , 'G4' , 'F#4' , 'F4' , 'E4' , 'D#4' , 'D4' , 'C#4' , 'C4' , 'B3' , 'A#3' , 'A3' , 'G#3' , 'G3' , 'F#3' , 'F3' , 'E3' , 'D#3' , 'D3' , 'C#3' , 'C3' , 'B2' , 'A#2' , 'A2' , 'G#2' , 'G2' , 'F#2' , 'F2' , 'E2' , 'D#2' , 'D2' , 'C#2' , 'C2' , 'B1' , 'A#1' , 'A1' , 'G#1' , 'G1' , 'F#1' , 'F1' , 'E1' , 'D#1' , 'D1' , 'C#1' , 'C1' , 'B0' , 'A#0' , 'A0'];\r\n\r\n    const steps = useRef([\r\n        [],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]\r\n    ])\r\n\r\n    localStorage.setItem('CURRENT_STEPS', JSON.stringify(steps.current));\r\n\r\n    const onSubmit = (data) => {\r\n        setState({data});\r\n        console.log(data);\r\n    }\r\n\r\n    const componentWillMount = () => {\r\n        setState({data: \"monoSynth\"});\r\n    }\r\n\r\n    const hello = (e) => {\r\n        return e;\r\n    }\r\n\r\n    const handleClear = () => {\r\n        props.setPlay(false);\r\n        //console.log(\"clicked\");\r\n        const testblues = document.querySelectorAll('div.piano-roll-cell.blue');\r\n        //console.log(testblues.length);\r\n        for (let i = 0; i < testblues.length; i++) {\r\n            testblues[i].classList.toggle('blue');\r\n            //if (steps.current[col].indexOf(notes[row]) === -1) {\r\n            //      steps.current[col] = steps.current[col].concat([notes[row]]);\r\n            //  } \r\n            //console.log(\"found blue\"); \r\n        }\r\n        for (let i = 0; i < steps.current.length; i++) {\r\n            steps.current[i] = [];\r\n        }\r\n        clearColLabel();\r\n        localStorage.setItem('CURRENT_STEPS', JSON.stringify(steps.current));\r\n    };\r\n\r\n    const acceptMidi = async() => {\r\n        handleClear();\r\n        /*\r\n        const data = await axios.get(`/nigel`, \r\n        {responseType: 'arraybuffer', transformResponse: [v => v]})\r\n            .then(function (response) {\r\n                //setSample(response.data);\r\n                let file = response.data;\r\n                let midi = new Midi(file);\r\n                fillGridWithMidi(midi);\r\n                \r\n                console.log(file);\r\n                let reader = new FileReader();\r\n                reader.onload = () => {\r\n                    //let midi = new Midi(reader.result);\r\n                    console.log(\"filling grid...\");\r\n\r\n                    \r\n                }\r\n               // reader.readAsArrayBuffer(file);\r\n            })\r\n\r\n        };        \r\n\r\n        const fillGridWithMidi = async(midi) => {\r\n            const synths = [];\r\n            const now = Tone.now() + 0.5;\r\n            midi.tracks.forEach(track => {\r\n                const synth = new Tone.PolySynth(10, Tone.Synth, {\r\n                    envelope: {\r\n                        attack: 0.02,\r\n                        decay: 0.1,\r\n                        sustain: 0.3,\r\n                        release: 1\r\n                    }\r\n                }).toMaster();\r\n                synths.push(synth);\r\n                track.notes.forEach(note => {\r\n                    synth.triggerAttackRelease(note.name, note.duration, note.time + now, note.velocity);\r\n                });\r\n            });\r\n        };\r\n    */\r\n\r\n        const randoms = document.querySelectorAll('div.piano-roll-cell');\r\n        let col = 0;\r\n        let row = 0;\r\n        for (let i = 0; i < randoms.length; i++) {\r\n            row = i % 88;\r\n            var y = Math.random();\r\n            col = (Math.round(y * 420) + 1) % steps.current.length;\r\n            if (y < 0.1) {\r\n                //if (steps.current[col].indexOf(notes[row]) === -1)\r\n                //{\r\n                //steps.current[col] = steps.current[col].concat([notes[row]]);\r\n                //console.log(notes[row]);\r\n\r\n                //}\r\n                //console.log(`row: ${row}, col ${col},  i: ${i}, row * col ${row * col}, bool: ${randoms[(88*col)+row].classList.contains('blue')}`)\r\n                if (randoms[(88 * col) + row].classList.contains('blue') === false) {\r\n                    randoms[(88 * col) + row].classList.toggle('blue');\r\n                    steps.current[col] = steps.current[col].concat([notes[row]]);\r\n\r\n                }\r\n                //console.log(steps.current);\r\n                //console.log(steps.current[0]);\r\n                //console.log(steps.current[col]);\r\n                //steps.current[col] = steps.current[col].concat([notes[row]]);\r\n            }\r\n            // col++;\r\n            // if (i % 8 === 0)\r\n            // {\r\n            //     col = col - 8;\r\n            //     row++;\r\n            //     console.log(\"here\");\r\n            // }\r\n\r\n        }\r\n        console.log(`randomize: ${steps.current[0]}`);\r\n        localStorage.setItem('CURRENT_STEPS', JSON.stringify(steps.current));\r\n    };\r\n\r\n\r\n    const decrementColumn = () =>{\r\n        props.setPlay(false);\r\n        var t = document.querySelector('.piano-roll-container--scrollable');\r\n        var all_col = document.querySelectorAll('.piano-roll-col-container');\r\n        console.log(`all_col: ${all_col.length}, cols: ${numOfCol.current}`)\r\n\r\n        if (all_col.length === 8) {\r\n            return;\r\n        }\r\n\r\n        t.removeChild(all_col[all_col.length - 1]);\r\n        steps.current.pop();\r\n        numOfCol.current = all_col.length - 1;\r\n        console.log(`steps.current: ${steps.current}, cols: ${numOfCol.current}`);\r\n\r\n        numOfCells.current -= 88;\r\n\r\n    }\r\n\r\n    // creates nodes(html elements/tag/object) and appends the node as a child of the container(inserts node into element container) \r\n    // to make a different colored cell for the sharp notes, regex pattern was made and used to match values a\r\n    const addColumnElement = (index = 0) => {\r\n        const piano_roll_container = document.querySelector('.piano-roll-container--scrollable');\r\n        const pattern = /\\w#\\d/g;\r\n        const T = document.querySelector('.tes');\r\n\r\n\r\n        let col_container = document.createElement('div');\r\n        col_container.classList.add('piano-roll-col-container');\r\n        let col_label = document.createElement('div');\r\n        col_label.classList.add('piano-roll-col-label');\r\n\r\n        let span = document.createElement('span');\r\n        span.innerText = index;\r\n        col_label.appendChild(span);\r\n        col_container.appendChild(col_label);\r\n        for (let j = 0; j < notes.length; j++) {\r\n            let col_cell = document.createElement('div');\r\n            col_cell.classList.add('piano-roll-cell');\r\n            if(numOfCells.current >= 703){\r\n            let row;\r\n            let col=0;\r\n            for(row = numOfCells.current+1; row > notes.length-1;){\r\n                row -= notes.length;\r\n                col++;\r\n            }\r\n            numOfCells.current = numOfCells.current+1;\r\n            col_cell.addEventListener('click',()=>{\r\n                col_cell.classList.toggle('blue');\r\n                props.setPlay(false);\r\n                \r\n                //console.log(`row: ${row}. col:${col}, notes.length: ${notes.length}, numOfCells: ${numOfCells.current}` );\r\n\r\n                    //console.log(`row: ${row}. col:${col}, notes.length: ${notes.length}, numOfCells: ${numOfCells.current}` );\r\n\r\n\r\n                    // console.log(`row: ${row}, col: ${col}, index%8 = ${index%8}`)\r\n                    T.innerHTML = `col: ${col}, row: ${row}, index%8 = ${index % 8}`;\r\n\r\n\r\n                    if (steps.current[col].indexOf(notes[row]) != -1) {\r\n                        steps.current[col] = steps.current[col].filter((a) => {\r\n                            return a != notes[row];\r\n                        });\r\n                        // console.log(steps.current);\r\n                        // console.log('indexof 0');\r\n                        return;\r\n                    }\r\n                    // if the note doesn't exist replace row with one that has been concatinated with the note/value\r\n                    if (steps.current[col].indexOf(notes[row]) == -1) {\r\n                        steps.current[col] = steps.current[col].concat([notes[row]]);\r\n                        // console.log(steps.current);\r\n                        // console.log('indexof -1')\r\n                        return;\r\n                    }\r\n                })\r\n            }\r\n            if (notes[j].match(pattern)) col_cell.classList.add('sharp-color');\r\n            col_container.appendChild(col_cell);\r\n\r\n        }\r\n\r\n\r\n        piano_roll_container.appendChild(col_container);\r\n\r\n        // console.log(col_container);\r\n\r\n    }\r\n\r\n    const incrementColumn = () =>{\r\n        props.setPlay(false);\r\n\r\n        //var t = document.querySelector('.piano-roll-container--scrollable');\r\n\r\n        //var all_col = document.querySelectorAll('.piano-roll-col-container');\r\n        steps.current = steps.current.concat([[]]);\r\n        //console.log(steps.current);\r\n        numOfCol.current += 1;\r\n        addColumnElement(numOfCol.current);\r\n\r\n        console.log('added new column, so the current amount of columns are:', numOfCol.current)\r\n    }\r\n\r\n    const clearColLabel = () => {\r\n        const purple_col = document.querySelector(\".purple\");\r\n        try {\r\n            purple_col.classList.remove('purple');\r\n        }\r\n        catch\r\n        {\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const col_label = document.querySelectorAll('.piano-roll-col-label');\r\n        col_label.forEach((e) => {\r\n            if (e.classList.contains('purple')) console.log('purple');\r\n        })\r\n\r\n        if (props.play) {\r\n\r\n            col_label[(previousStepIndex.current + 1) % (numOfCol.current - 1)].classList.remove('purple');\r\n            // console.log( `prev plus 1 element = ${(previousStepIndex.current+1)%(numOfCol-1)}, previousIndex: ${previousStepIndex.current}, currentIndex: ${currentStepIndex}`);\r\n            col_label[previousStepIndex.current].classList.remove('purple');\r\n            col_label[currentStepIndex].classList.add('purple');\r\n        }\r\n    }, [currentStepIndex])\r\n\r\n    useEffect(() => {\r\n        const playhead = document.querySelector('.piano-roll-playhead')\r\n        if (props.play) {\r\n            console.log(playhead);\r\n            const left_dist = window.getComputedStyle(playhead).left;\r\n            console.log(window.getComputedStyle(playhead).left);\r\n            console.log(\"before \" + playhead.style.left);\r\n            //playhead.style.left=(parseInt(playhead.style.left) + 1) + \"%\";\r\n            playhead.style.left = parseInt(left_dist) + 49 + \"px\";\r\n            console.log(\"after \" + playhead.style.left);\r\n\r\n            \r\n        }\r\n    }\r\n    )\r\n\r\n    const initializePianoRoll = () => {\r\n        let i = 1;\r\n        for (; i <= 24; i++) {\r\n            addColumnElement(i);\r\n            numOfCol.current += 1;\r\n        }\r\n\r\n        const row_label = document.querySelector('.piano-roll-row-container');\r\n        const pattern = /\\w#\\d/g;\r\n        notes.forEach((e) => {\r\n            var di = document.createElement('div');\r\n            var span = document.createElement('span');\r\n\r\n            span.innerText = e;\r\n            di.appendChild(span);\r\n            di.classList.add('piano-roll-row-label');\r\n            if (e.match(pattern)) di.classList.add('sharp-color');\r\n            row_label.appendChild(di);\r\n\r\n            if (e == \"C4\") di.scrollIntoView();\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        const T = document.querySelector('.tes');\r\n\r\n        initializePianoRoll();\r\n\r\n        const test = document.querySelectorAll('.piano-roll-cell'); // aggregates all elements with that className\r\n        // console.log(test);\r\n        // for each element\r\n        // 1 - toggle class on click\r\n        // 2 - print the row and col of element\r\n        // 3 - add to matrix (using useRef at the moment. I will try to change that later) if element value is not in matrix\r\n        // 4 - remove element accordingly if value exists in same row of matrix\r\n        test.forEach((e, index, array) => {\r\n            numOfCells.current = index;\r\n            e.addEventListener('click', () => {\r\n                props.setPlay(false);\r\n                clearColLabel();\r\n                setCurrentStepIndex(-1)\r\n                // console.log(index%8);\r\n                let col = 0;\r\n                let row;\r\n                for (row = index; row > notes.length - 1;) {\r\n                    row -= notes.length;\r\n                    col++;\r\n                }\r\n                localStorage.setItem('CURRENT_STEPS', JSON.stringify(steps.current));\r\n                // console.log(`row: ${row}, col: ${col}, index%8 = ${index%8}`)\r\n                e.classList.toggle('blue');\r\n                // T.innerHTML = `col: ${col}, row: ${row}, index%8 = ${index%8}`;\r\n                // console.log(`row: ${row}, col: ${col}, index%8 = ${index%8}`)\r\n                // setSteps(steps[col] = steps[col].concat([notes[row]]));\r\n                // console.log(steps.current[col].indexOf(notes[row]));\r\n                // if the note exists in appropriate row replace that row with an array without element\r\n                // console.log(\"clicked\", steps.current[col].indexOf(notes[row]));\r\n                if (steps.current[col].indexOf(notes[row]) != -1) {\r\n                    steps.current[col] = steps.current[col].filter((a) => {\r\n                        return a != notes[row];\r\n                    });\r\n                    // console.log(steps.current);\r\n                    // console.log('indexof 0');\r\n                    return;\r\n                }\r\n                // if the note doesn't exist replace row with one that has been concatinated with the note/value\r\n                if (steps.current[col].indexOf(notes[row]) == -1) {\r\n                    steps.current[col] = steps.current[col].concat([notes[row]]);\r\n                    // console.log(steps.current);\r\n                    // console.log('indexof -1')\r\n                    return;\r\n                }\r\n\r\n            })\r\n            // console.log('done\\n');\r\n\r\n\r\n        })\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"piano-roll-landing-container\">\r\n                <p className=\"tes\"></p>\r\n                <div className=\"clickables\">\r\n                    <div className = \"instrumentChanger\">\r\n                        <form id = \"instrumentForm\" onSubmit = {handleSubmit(onSubmit)}>\r\n                            <label>\r\n                                Select Instrument\r\n                                <div className = \"instrumentsContent\">\r\n                                    <select {...register('instrument')}>\r\n                                        <option value=\"monoSynth\">monoSynth</option>\r\n                                        <option value=\"amSynth\">amSynth</option>\r\n                                        <option value=\"duoSynth\">duoSynth</option>\r\n                                        <option value=\"fmSynth\">fmSynth</option>\r\n                                        <option value=\"membraneSynth\">membraneSynth</option>\r\n                                        <option value=\"metalSynth\">metalSynth - NA </option>\r\n                                        <option value=\"pluckSynth\">pluckSynth</option>\r\n                                        <option value=\"synth\">synth</option>\r\n                                    </select>\r\n                                </div>\r\n                            </label>\r\n                        <button class= \"applyButton\" type=\"submit\" value=\"Apply\">Apply</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <button class=\"btn\" onClick={handleClear}>Clear</button>\r\n                    <button class=\"btn\" onClick={acceptMidi}>Randomize</button>\r\n                    {/* <button onClick={decrementColumn}> \r\n                            remove column\r\n                        </button>\r\n                        <button onClick={incrementColumn}> \r\n                            add column\r\n                        </button>\r\n                     <button onClick={() => setIsPlaying(!isPlaying)}>\r\n                            {!isPlaying ? 'Play' : 'Stop'}\r\n                        </button> */}\r\n                </div>\r\n                {/* Reactronica Components */}\r\n                <Song isPlaying={props.play} bpm={props.bpm} >\r\n                    <Track\r\n                        steps={steps.current}\r\n                        // Callback triggers on every step\r\n                        onStepPlay={(stepNotes, index) => {\r\n\r\n                            setCurrentStepIndex(index);\r\n                            //console.log(`prev.current:  ${previousStepIndex.current}, track index: ${index}, calc: ${(index + (numOfCol.current - 2)) % (numOfCol.current - 1)} numOfCol: ${numOfCol.current}`)\r\n                            previousStepIndex.current = (index + (numOfCol.current - 1)) % (numOfCol.current);\r\n                            console.log(`num of col: ${numOfCol.current}`)\r\n                            //console.log(data.data.instrument);\r\n                            //console.log({props.instrument});\r\n                            console.log(\"index \" + index);\r\n                        }}\r\n                        volume={props.vol}\r\n                        pan={props.pan}\r\n                    >\r\n                        <Instrument type = {data.data.instrument}/>\r\n                    </Track>\r\n                </Song>\r\n                \r\n                <div className = \"piano-roll-playhead\"></div>\r\n                <section className=\"piano-roll-container\">\r\n                    <section className=\"piano-roll-container--scrollable\">\r\n                        \r\n                        <div className=\"piano-roll-row-container\">\r\n                            <div className=\"piano-roll-row-label\" >\r\n                                <span></span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </section>\r\n                </section>\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/night.3087ad10.mp4\";","export default __webpack_public_path__ + \"static/media/Nightingale.7b2356f2.png\";","import React, { useState } from 'react'\r\nimport \"./nav.css\";\r\nimport logo from '../sources/Nightingale.png'\r\n\r\n\r\n\r\n//fas fa-play\r\n//fas fa-pause\r\nconst Nav = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className='NavContainer'>\r\n                <img className='Logo' alt=\"logo\" src={logo} />\r\n                <h1 className='nameLogo'>Nightingale</h1>\r\n                <button class=\"playbtn\" onClick={() => {\r\n                    props.setPlay(!props.play);\r\n                    if (props.play === true) {\r\n                        // call clearColLabel()\r\n                        // call setCurrentStepIndex(-1)\r\n                    }\r\n                }}>\r\n                    {!props.play ? 'Play' : 'Stop'}\r\n                </button>\r\n                <div className=\"BPMwrapper\">\r\n                    <button onClick={props.decrement10} className=\"bpmBtn10\">-10</button>\r\n                    <button onClick={props.decrement} className=\"bpmBtn\">-</button>\r\n                    {/*<div className=\"BPMcount\" ><span contenteditable=\"true\">{props.bpm}</span> bpm</div>*/}\r\n                    <div className=\"BPMcount\" >{props.bpm} bpm</div>\r\n                    <button onClick={props.increment} className=\"bpmBtn\">+</button>\r\n                    <button onClick={props.increment10} className=\"bpmBtn10\">+10</button>\r\n                </div>\r\n                {/*<button className=\"generateBtn\" onClick={props.sendMitty}>Download</button>*/}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState } from 'react'\r\nimport './navSide.css';\r\n\r\n\r\nconst getVol = (vol) =>\r\n{\r\n    return parseInt(vol) + 100;\r\n}\r\n\r\nconst getPan = (pan) =>\r\n{\r\n    if (pan < 0)\r\n    {\r\n        return \"L\" + String(Math.abs(pan));\r\n    }\r\n    else if (pan > 0)\r\n    {\r\n        return \"R\" + String(pan);\r\n    }\r\n        \r\n    else\r\n    {\r\n        return String(pan);\r\n    }\r\n}\r\n\r\nconst getInstru = (synthInstrument) =>\r\n{\r\n    if (synthInstrument === 'polySynth')\r\n    {\r\n        return 'polySynth';\r\n    } \r\n    else if (synthInstrument === 'duoSynth')\r\n    {\r\n        return 'duoSynth';\r\n    } \r\n}\r\n\r\nconst NavSide = (props) => {\r\n    const [inValue, setInValue] = useState(-50);\r\n    const [panValue, setPanValue] = useState(0);\r\n//    const [instruCurrent, setInstruCurrent] = useState('polySynth');\r\n\r\n    // if (swidge)\r\n    // {\r\n    //     props.handleVol(-50);\r\n    //     props.handlePan(0);\r\n    //     swidge = false;    \r\n    // }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className = 'NavSide'>\r\n                <div className = 'sliderContainer'> \r\n                    <div className = 'range'>\r\n                        <div className =\"Vol\">Volume: {getVol(String(inValue))}</div>\r\n                        <div className='slide'>\r\n                            <div className = 'field'>\r\n                                <div className= 'value left'>0</div>\r\n                                <input className='slider' \r\n                                    type=\"range\" \r\n                                    min ='-100'max='0' \r\n                                    onChange={(e => {\r\n                                        props.handleVol(e.target.value);\r\n                                        setInValue(e.target.value);\r\n                                    })}\r\n                                    value={inValue}\r\n                                    steps ='1'>\r\n                                </input>\r\n                                <div className= 'value right'>100</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div className = 'sliderContainer two'> \r\n                    <div className = 'range'>\r\n                        <div className =\"Vol\">Pan: {getPan(panValue)}</div>\r\n                        <div className='slide'>\r\n                            <div className = 'field'>\r\n                                <div className= 'value left'>L</div>\r\n                                <input className='slider' \r\n                                    type=\"range\" \r\n                                    min ='-100'max='100' \r\n                                    onChange={(e => {\r\n                                        props.handlePan(e.target.value);\r\n                                        setPanValue(e.target.value);\r\n                                    })}\r\n                                    value={panValue}\r\n                                    steps ='1'>\r\n                                </input>\r\n                                <div className= 'value right'>R</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n                    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavSide;\r\n\r\n\r\n\r\n/*\r\n<div className = 'sliderContainer'> \r\n    <RangeStepInput\r\n    min={0} max={80}\r\n    defaultValue={props.vol} \r\n    step={1}\r\n    onChange={e => props.handleVol(e.target.value)}\r\n    />\r\n</div>\r\n*/","import React, {Component} from \"react\";\r\nimport Night from '../sources/night.mp4';\r\nimport './Home.css';                        //styling for video and background button in Home.css\r\n\r\nclass Video extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {playing: false};\r\n    }\r\n\r\n    componentDidMount = () => {\r\n    this.playVideo();\r\n    \r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        this.pauseVideo();\r\n    };\r\n\r\n    getVid = el => {\r\n        this.video = el\r\n    }\r\n\r\n    playVideo = () => {\r\n        this.video.play();\r\n        this.setState({playing: true});\r\n    };\r\n\r\n    pauseVideo = () => {\r\n        this.video.pause();\r\n        this.setState({playing: false});\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className = \"videoContainer\">\r\n                <video className = \"Video\"\r\n                    autoPlay\r\n                    loop\r\n                    muted\r\n                    ref={this.getVid}\r\n                    src={Night}\r\n                    type=\"video/mp4\"\r\n                />\r\n\r\n                <div className = \"playbuttons\">\r\n                    <button className = \"videoButton\" onClick={this.state.playing ? this.pauseVideo : this.playVideo}>\r\n                        {!this.state.playing ? 'Play Background' : 'Pause Background'}\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Video;","import React, { useState } from 'react';\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport Login from './Users/Login.js';\r\nimport Collaborate from './UserFeatures/Collaborate.js';\r\nimport UserSongs from './UserFeatures/UserSongs.js';\r\nimport Settings from './UserFeatures/Settings.js';\r\n\r\nimport { ProSidebar,Menu,MenuItem,SidebarHeader,SidebarFooter,SidebarContent} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport './MenuRight.css';\r\n\r\nimport { FaList, FaRegHeart } from \"react-icons/fa\";\r\nimport { FiHome, FiLogOut, FiArrowLeftCircle, \r\n    FiArrowRightCircle, FiHeadphones, FiUsers } from \"react-icons/fi\";\r\nimport { RiPencilLine } from \"react-icons/ri\";\r\nimport { BiCog, BiLogIn } from \"react-icons/bi\";\r\nimport {AiFillGithub} from \"react-icons/ai\";\r\n\r\n\r\nconst MenuRight = () =>{\r\n\r\n    const [menuCollapse, setMenuCollapse] = useState(false);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [showMessage2, setShowMessage2] = useState(false);\r\n\r\n    const menuIconClick = () => {\r\n        menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <Router>\r\n            <div id=\"header\">\r\n            {/* collapsed props to change menu size using menucollapse state */}\r\n            <ProSidebar collapsed={menuCollapse} rtl = {true}>\r\n                <SidebarHeader>\r\n                <div className=\"logotext\">\r\n                    {/* small and big change using menucollapse state */}\r\n                    <p>{menuCollapse ? \"Menu\" : \"Nightingale \"}</p>\r\n                    </div>\r\n                    <div className=\"closemenu\" onClick={menuIconClick}>\r\n                        {/* changing menu collapse icon on click */}\r\n                    {menuCollapse ? (\r\n                        <FiArrowRightCircle/>\r\n                    ) : (\r\n                        <FiArrowLeftCircle/>\r\n                    )}\r\n                    </div>\r\n                </SidebarHeader>\r\n                <SidebarContent>\r\n                    <Menu iconShape=\"square\">\r\n                        {/*<MenuItem active={true} icon={<FiHeadphones />}>\r\n                            Home <Link to= \"/\"/>\r\n                        </MenuItem>*/}\r\n                        <div class= \"collab-btn\">\r\n                            <MenuItem icon={<FiUsers />}\r\n                                onMouseEnter={() => setShowMessage(true)}\r\n                                onMouseLeave ={() => setShowMessage(false)}>\r\n                                Collaborate\r\n                            </MenuItem>\r\n                            {showMessage && (\r\n                                <div>\r\n                                    Press ALT + T + T to enable user collaboration\r\n                                </div>\r\n                                )}\r\n                        </div>\r\n                        <div class= \"github-btn\">\r\n                            <MenuItem icon={<AiFillGithub />}\r\n                                onMouseEnter={() => setShowMessage2(true)}\r\n                                onMouseLeave ={() => setShowMessage2(false)}>\r\n                                GitHub <Link to=\"/github\"/>\r\n                            </MenuItem>\r\n                            {showMessage2 && (\r\n                                <div>\r\n                                    Go to Nightingale's Github\r\n                                </div>\r\n                                )}\r\n                        </div>\r\n                        {/*<MenuItem icon={<FaRegHeart />}>\r\n                            About <Link to=\"/about\"/>\r\n                            </MenuItem>*/}\r\n                    </Menu>\r\n                </SidebarContent>\r\n            </ProSidebar>\r\n                <Switch>\r\n                    <Route path='/github' component={() => { \r\n                        window.location.href = ('https://github.com/kozakrichard/MVP_DEMO'); \r\n                        return null;\r\n                    }}/>\r\n                    <Route path=\"/about\">\r\n                        <Settings />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n        </>\r\n    );\r\n};\r\nexport default MenuRight;","import React, { useState } from 'react'\r\nimport PianoRoll from './MusicComponents/PianoRoll'\r\nimport Night from '../sources/night.mp4'\r\nimport './Home.css'\r\nimport Nav from './nav.js';\r\nimport NavSide from './navSide';\r\nimport axios from 'axios';\r\nimport Video from './Video.js';\r\nimport MenuRight from './Menu/MenuRight.js';\r\nimport * as Tone from 'tone';\r\nimport { Midi } from '@tonejs/midi';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [BPM, setBPM] = useState(75);\r\n\r\n\r\n    const handleIncrement10 = () => {\r\n        if (BPM < 190) {\r\n            setBPM(BPM => BPM + 10)\r\n            console.log({ BPM })\r\n        }\r\n    }\r\n\r\n    const handleDecrement10 = () => {\r\n        if (BPM > 10) {\r\n            setBPM(BPM => BPM - 10)\r\n            console.log({ BPM })\r\n        }\r\n    }\r\n\r\n\r\n    const handleIncrement = () => {\r\n        if (BPM < 200) {\r\n            setBPM(BPM => BPM + 1)\r\n            console.log({ BPM })\r\n        }\r\n    }\r\n\r\n    const handleDecrement = () => {\r\n        if (BPM > 0) {\r\n            setBPM(BPM => BPM - 1)\r\n            console.log({ BPM })\r\n        }\r\n    }\r\n\r\n    const [volume, setVolume] = useState(-50);\r\n    const handleVolume = e => {\r\n        console.log(volume);\r\n        setVolume(e);\r\n    }\r\n\r\n    const [pan, setPan] = useState(0);\r\n    const handlePan = e => {\r\n        setPan(e);\r\n    }\r\n\r\n\r\n    const [toggle, setToggle] = useState(false);\r\n    const updateToggle = () => {\r\n        setToggle(!toggle);\r\n    }\r\n\r\n    const [sample, setSample] = useState('');\r\n\r\n\r\n    const sendData = async () => {\r\n        //localStorage.setItem('')\r\n\r\n        const midi = JSON.parse(localStorage.getItem('CURRENT_STEPS'));\r\n\r\n        const data = await axios.post(`/api/process_data`, midi)\r\n            .then(function (response) {\r\n                setSample(response.data);\r\n                console.log(response);\r\n              \r\n                \r\n                // const a = document.createElement('a');\r\n                // a.href = url;\r\n                // a.download = 'test.txt';\r\n                // a.click(); // triggering it manually\r\n            });\r\n    };\r\n\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Nav increment={handleIncrement} decrement={handleDecrement} \r\n            increment10={handleIncrement10} decrement10={handleDecrement10} bpm={BPM} \r\n                tog={updateToggle} play={isPlaying} setPlay={setIsPlaying} \r\n                sendMitty={sendData}\r\n            />\r\n            <NavSide handleVol={handleVolume} vol={volume} handlePan={handlePan} pan={pan} />\r\n            <div className='Container'>\r\n                <Video />\r\n                <PianoRoll bpm={BPM} vol={volume} pan={pan} togg={toggle} play={isPlaying} setPlay={setIsPlaying} />\r\n            </div>\r\n            <MenuRight/>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Nav from './components/nav';\r\n\r\n\r\nfunction App() {\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <Home />\r\n      {/* consists of piano note element on the left and a stateful note matrix */}\r\n    </>\r\n  );\r\n\r\n}\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n  \r\n)\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}