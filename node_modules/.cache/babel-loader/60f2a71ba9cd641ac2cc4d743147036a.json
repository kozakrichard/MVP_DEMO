{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/GitHub/test/src/components/navSide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './navSide.css'; // const setVol = () => {\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavSide = props => {\n  _s();\n\n  const [inValue, setInValue] = useState(-50);\n  const [panValue, setPanValue] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NavSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Vol\",\n            children: [\"Volume: \", inValue + 100]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value left\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"slider\",\n                type: \"range\",\n                min: \"-100\",\n                max: \"0\",\n                onChange: e => {\n                  props.handleVol(e.target.value);\n                  setInValue(e.target.value);\n                },\n                value: inValue,\n                steps: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 33\n              }, this), props.handleVol(-50), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value right\",\n                children: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sliderContainer two\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Vol\",\n          children: [\"Pan: \", panValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slide\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value left\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"slider\",\n              type: \"range\",\n              min: \"-100\",\n              max: \"100\",\n              onChange: e => {\n                props.handlePan(e.target.value);\n                setPanValue(e.target.value);\n              },\n              value: panValue,\n              steps: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"value right\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavSide, \"shwoew2lieAE5eJI0hp0Aoqcw00=\");\n\n_c = NavSide;\nexport default NavSide;\n/*\n<div className = 'sliderContainer'>\n    <RangeStepInput\n    min={0} max={80}\n    defaultValue={props.vol}\n    step={1}\n    onChange={e => props.handleVol(e.target.value)}\n    />\n</div>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"NavSide\");","map":{"version":3,"sources":["/Users/nigel/Documents/GitHub/test/src/components/navSide.js"],"names":["React","useState","NavSide","props","inValue","setInValue","panValue","setPanValue","e","handleVol","target","value","handlePan"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './navSide.css';\n\n\n// const setVol = () => {\n\n\n// }\n\nconst NavSide = (props) => {\n    const [inValue, setInValue] = useState(-50);\n    const [panValue, setPanValue] = useState(0);\n\n\n    return (\n        <>\n            <div className='NavSide'>\n                <div className='sliderContainer'>\n                    <div className='range'>\n                        <div className=\"Vol\">Volume: {inValue + 100}</div>\n                        <div className='slide'>\n                            <div className='field'>\n                                <div className='value left'>0</div>\n                                <input className='slider'\n                                    type=\"range\"\n                                    min='-100' max='0'\n                                    onChange={(e => {\n                                        props.handleVol(e.target.value);\n                                        setInValue(e.target.value);\n                                    })}\n                                    value={inValue}\n                                    steps='1'>\n                                </input>\n                                {props.handleVol(-50)}\n                                <div className='value right'>100</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n            \n            <div className='sliderContainer two'>\n                <div className='range'>\n                    <div className=\"Vol\">Pan: {panValue}</div>\n                    <div className='slide'>\n                        <div className='field'>\n                            <div className='value left'>0</div>\n                            <input className='slider'\n                                type=\"range\"\n                                min='-100' max='100'\n                                onChange={(e => {\n                                    props.handlePan(e.target.value);\n                                    setPanValue(e.target.value);\n                                })}\n                                value={panValue}\n                                steps='1'>\n                            </input>\n                            <div className='value right'>100</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n\nexport default NavSide;\n\n\n\n/*\n<div className = 'sliderContainer'>\n    <RangeStepInput\n    min={0} max={80}\n    defaultValue={props.vol}\n    step={1}\n    onChange={e => props.handleVol(e.target.value)}\n    />\n</div>\n*/"]},"metadata":{},"sourceType":"module"}